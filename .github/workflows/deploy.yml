name: Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
        env:
          TF_VAR_aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
          AWS_S3_BUCKET: ${{ vars.TERRAFORM_STATE_BUCKET || 'terraform-state-bucket' }}

      - name: Terraform Format
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan
        env:
          TF_VAR_aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
          TF_VAR_ami_id: ${{ vars.AMI_ID || 'ami-0c7217cdde317cfec' }}
          TF_VAR_instance_type: ${{ vars.INSTANCE_TYPE || 't2.micro' }}
          TF_VAR_key_name: ${{ vars.KEY_NAME || '' }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_aws_region: ${{ vars.AWS_REGION || 'us-east-1' }}
          TF_VAR_ami_id: ${{ vars.AMI_ID || 'ami-0c7217cdde317cfec' }}
          TF_VAR_instance_type: ${{ vars.INSTANCE_TYPE || 't2.micro' }}
          TF_VAR_key_name: ${{ vars.KEY_NAME || '' }}
